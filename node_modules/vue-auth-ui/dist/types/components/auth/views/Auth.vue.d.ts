import type { View, Provider, Labels, Appereance } from '../../../components/auth/types';
export interface Props {
    view?: Extract<View, 'sign_in' | 'sign_up' | 'forgotten_password'>;
    onlyThirdPartyProviders?: boolean;
    providers?: Array<Provider> | null;
    socialLayout?: 'row' | 'col';
    labels?: Labels;
    appearance?: Appereance;
    message?: string;
    error?: string;
    magicLink?: boolean;
}
declare const _default: import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<Props>, {
    view: string;
    magicLink: boolean;
    providers: null;
    onlyThirdPartyProviders: boolean;
}>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("signInWithPassword" | "signUp" | "resetPasswordForEmail" | "signInWithOtp" | "signInWithOAuth")[], "signInWithPassword" | "signUp" | "resetPasswordForEmail" | "signInWithOtp" | "signInWithOAuth", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<Props>, {
    view: string;
    magicLink: boolean;
    providers: null;
    onlyThirdPartyProviders: boolean;
}>>> & {
    onSignInWithPassword?: ((...args: any[]) => any) | undefined;
    onSignUp?: ((...args: any[]) => any) | undefined;
    onResetPasswordForEmail?: ((...args: any[]) => any) | undefined;
    onSignInWithOtp?: ((...args: any[]) => any) | undefined;
    onSignInWithOAuth?: ((...args: any[]) => any) | undefined;
}, {
    view: "sign_in" | "sign_up" | "forgotten_password";
    providers: Provider[] | null;
    onlyThirdPartyProviders: boolean;
    magicLink: boolean;
}>;
export default _default;
declare type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
declare type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
declare type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? P[K] & {
        default: D[K];
    } : P[K];
};
